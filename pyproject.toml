[tool.poetry]
name = "ring-doorbell"
version = "0.7.3"
description = "A Python library to communicate with Ring Door Bell (https://ring.com/)"
authors = ["Marcelo Moreira de Mello <tchello.mello@gmail.com>"]
license = "LGPLv3+"
readme = "README.rst"
homepage = "https://github.com/tchellomello/python-ring-doorbell"
repository = "https://github.com/tchellomello/python-ring-doorbell"
documentation = "http://python-ring-doorbell.readthedocs.io/"
keywords = [
    "ring",
    "door bell",
    "camera",
    "home automation",
]
classifiers = [
    "Environment :: Other Environment",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Home Automation",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "ring_doorbell" },
    { include = "tests", format = "sdist" },
]
include = [
    "LICENSE", 
    "CONTRIBUTING.rst", 
    "CHANGELOG.rst",
    "scripts/ringcli.py"
]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/tchellomello/python-ring-doorbell/issues"

[tool.poetry.scripts]
ring-doorbell = "ring_doorbell.cli:cli"

[tool.poetry.dependencies]
python = "^3.8"
requests = ">=2.0.0"
requests-oauthlib = ">=1.3.0,<2"
oauthlib = ">=3.0.0,<4"
pytz = ">=2022.0"

# required only for docs
sphinx = { version = "^7", optional = true }
sphinx_rtd_theme = { version = "^1", optional = true }
sphinxcontrib-programoutput = { version = "^0", optional = true }
docutils = { version = ">=0.17", optional = true }

[tool.poetry.group.dev.dependencies]
coveralls = "*"
flake8 = "*"
mock = "*"
pre-commit = "*"
pylint = "*"
pytest = "*"
pytest-cov = "*"
requests-mock = "*"
sphinx-github-changelog = "^1.2.1"

[tool.poetry.group.tox.dependencies]
tox = "*"

[tool.poetry.extras]
docs = ["sphinx", "sphinx_rtd_theme", "sphinxcontrib-programoutput", "docutils"]

[tool.pytest.ini_options]
testpaths = "tests"
norecursedirs = ".git"

[tool.pylint]
disable = ["format", "locally-disabled", "duplicate-code", "cyclic-import", "unused-argument",
  "global-statement","too-many-arguments", "too-many-branches", "too-many-instance-attributes",
  "too-many-locals", "too-many-public-methods", "too-many-return-statements", "too-many-statements",
  "too-many-lines", "too-few-public-methods", "abstract-method", "consider-using-f-string",
  "import-error",
]
overgeneral-exceptions = ["builtins.Exception"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
